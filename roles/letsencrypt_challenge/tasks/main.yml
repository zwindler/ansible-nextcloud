---
- apt_repository:
    repo: ppa:certbot/certbot

- name: "Apt upgrade"
  apt:
    upgrade: dist

- name: "Install packages"
  apt:
    name: "{{item}}"
    state: present
  loop:
    - python-certbot-nginx

- name: "Generate RSA 4096 key"
  openssl_privatekey:
    path: "/etc/pki/cert/private/{{item}}.key"
    type: RSA
    size: 4096
  loop:
    - "account"
    - "domain"

- name: "Generate an OpenSSL Certificate Signing Request"
  openssl_csr:
    path: "/etc/pki/cert/csr/{{nextcloud_instance_name}}.{{your_domain}}.csr"
    privatekey_path: "/etc/pki/cert/private/domain.key"
    common_name: "{{nextcloud_instance_name}}.{{your_domain}}"

- name: "Configure nginx for nextcloud instance"
  template:
    src: acme.conf.j2
    dest: "/etc/nginx/sites-available/{{nextcloud_instance_name}}.{{your_domain}}.acme.conf"
  notify: "nginx reload"

- name: "Create a link in sites-enabled"
  file:
    src: "/etc/nginx/sites-available/{{nextcloud_instance_name}}.{{your_domain}}.acme.conf"
    dest: "/etc/nginx/sites-enabled/{{nextcloud_instance_name}}.{{your_domain}}.acme.conf"
    state: link

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers

- name: "Create a challenge for {{nextcloud_instance_name}}.{{your_domain}} using a account key from a variable."
  acme_certificate:
    account_key_src: /etc/pki/cert/private/account.key 
    acme_directory: "https://acme-v02.api.letsencrypt.org/directory"
    acme_version: 2
    account_email: "{{admin_email}}"
    terms_agreed: yes
    csr: "/etc/pki/cert/csr/{{nextcloud_instance_name}}.{{your_domain}}.csr"
    dest: "/etc/nginx/ssl/{{nextcloud_instance_name}}.{{your_domain}}.crt"
    fullchain_dest: "/etc/nginx/ssl/{{nextcloud_instance_name}}.{{your_domain}}-fullchain.crt"
    chain_dest: "/etc/nginx/ssl/{{nextcloud_instance_name}}.{{your_domain}}-intermediate.crt"
  register: acme_challenge

- name: "Create dirs with owner to nginx"
  file:
    path: "{{item}}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  loop:
    - "/usr/share/nginx/challenges/.well-known/acme-challenge/"

- name: "Copying challenge files"
  copy:
    dest: "/usr/share/nginx/challenges/{{item.value['http-01'].resource}}"
    content: "{{ item.value['http-01'].resource_value }}"
    owner: www-data 
    group: www-data
    mode: "0600"
  with_dict: "{{ acme_challenge.challenge_data }}"

- name: "Let the challenge be validated and retrieve the cert and intermediate certificate"
  acme_certificate:
    account_key_src: /etc/pki/cert/private/account.key 
    acme_directory: "https://acme-v02.api.letsencrypt.org/directory"
    acme_version: 2
    account_email: "{{admin_email}}"
    terms_agreed: yes
    csr: "/etc/pki/cert/csr/{{nextcloud_instance_name}}.{{your_domain}}.csr"
    dest: "/etc/nginx/ssl/{{nextcloud_instance_name}}.{{your_domain}}.crt"
    fullchain_dest: "/etc/nginx/ssl/{{nextcloud_instance_name}}.{{your_domain}}-fullchain.crt"
    chain_dest: "/etc/nginx/ssl/{{nextcloud_instance_name}}.{{your_domain}}-intermediate.crt"
    data: "{{ acme_challenge }}"
  notify: "nginx reload"

- name: "Clean challenges files"
  file: 
    path: "/usr/share/nginx/challenges/{{item.value['http-01'].resource}}"
    state: absent
  with_dict: "{{ acme_challenge.challenge_data }}"
