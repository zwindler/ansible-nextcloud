---
- name: "Install packages"
  apt:
    name: "{{item}}"
    state: present
  loop:
    - unzip

- name: "Download file with check (sha256)"
  get_url:
    url: "https://download.nextcloud.com/server/releases/nextcloud-{{nextcloud_version}}.zip"
    dest: "/tmp/nextcloud-{{nextcloud_version}}.zip"
    #    checksum: "sha256:https://download.nextcloud.com/server/releases/nextcloud-{{nextcloud_version}}.zip.sha256"

- name: "Install nextcloud"
  unarchive:
    src: "/tmp/nextcloud-{{nextcloud_version}}.zip"
    dest: "/usr/share/nginx/"
    remote_src: yes

- name: "Change /usr/share/nginx/nextcloud owner to nginx"
  file:
    path: "{{item}}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  loop:
    - "/usr/share/nginx/nextcloud"

- name: "Install packages"
  apt:
    name: "{{item}}"
    state: present
  loop:
    - php8.1-imagick 
    - php8.1-common 
    - php8.1-mysql 
    - php8.1-fpm
    - php8.1-gd
    - php8.1-json
    - php8.1-curl
    - php8.1-zip
    - php8.1-xml
    - php8.1-mbstring
    - php8.1-bz2 
    - php8.1-intl
    - php8.1-bcmath
    - php8.1-gmp

- name: "Create a new database for nextcloud"
  mysql_db:
    name: nextcloud
    state: present

- name: "Create database user nextcloud with password and nextcloud database privileges and 'WITH GRANT OPTION'"
  mysql_user:
    name: nextcloud
    password: "{{nextcloud_mariadb_password}}" 
    priv: 'nextcloud.*:ALL,GRANT'
    state: present

- name: "Configure nginx for nextcloud instance"
  template:
    src: nextcloud.conf.j2
    dest: "/etc/nginx/sites-available/{{nextcloud_instance_name}}.{{your_domain}}.conf"

- name: "Create a link in sites-enabled"
  file:
    src: "/etc/nginx/sites-available/{{nextcloud_instance_name}}.{{your_domain}}.conf"
    dest: "/etc/nginx/sites-enabled/{{nextcloud_instance_name}}.{{your_domain}}.conf"
    state: link
  notify: "nginx reload"
